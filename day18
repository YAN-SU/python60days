# 【Python 专题课】 正则表达式入门教程合集

1. 本文目标
  参考手册
2. 如何使用本教程
  反复练习，学过一遍记不得没关系
3. 正则表达式到底是什么东西? 
  记录文本规则的代码
4. 入门
  基础，元字符：\b 和 .* 还有 \d{2}
5. 测试正则表达式
  有在线测试工具
6. 元字符
7. 字符转义
8. 重复
9. 字符类
  复杂的表达式:\(?0\d{2}[) -]?\d{8}
  #转义【（】，可以存在0次或一次，后面跟0，0后跟2个数字，然后从【）， ， -】3个符号中任选0次或1次出现，后面跟8个数字。
10. 分枝条件
  但如果按上面的规则， 也能匹配010）-88887777，所以需要用到分枝条件，用|分开。
  比如表达式：0\d{2}-\d{8}|0\d{3}-\d{7}
  #0后跟2个数字，再跟-，再跟8个数字；或者，0后跟3个数字，再跟-，再跟7个数字
  或者表达式：\(?0\d{2}\)?[- ]?\d{8}|0\d{2}[- ]?\d{8}
  #转义（，可以存在0次或1次，再跟0，再跟2个数字，再跟），可以存在0次或1次，再跟【-， ，】，可以存在0次或1次，再跟8个数字；
   或者，0后跟2个数字，再跟【-， ，】，可以存在0次或1次，再跟8个数字。
  
  使用分枝条件时，要注意各个条件的顺序。
  原因是匹配分枝条件时，将会从左到右地测试每个条件，如果满足了某个分枝的话，就不会去再管其它的条件了。

11. 分组
  简单的 IP 地址匹配表达式：(\d{1,3}\.){3}\d{1,3}
  #匹配1到3位的数字，转义【.】，以上重复3次，再匹配一组1到3位的数字。
  这就是分组重复的精髓。
  一个正确的 IP 地址: ((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)
  #<1>开始（1）师2，后面跟0-4任选的1个数字；
   分枝条件（2）是25，后面跟0-5任选的1个数字；
          （3）是【0、1】，可以存在0次或1次，后面跟1个数字，再跟1个数字，可以存在0次或1次；
   以上<1>是1个分组，后面跟转义的【.】，总体重复3次。
   <2>开始（1）是2，后面跟0-4任选的1个数字；
   分枝条件（2）是25，后面跟0-5任选的1个数字；
         （3）是【0、1】，可以存在0次或1次，后面跟1个数字，再跟1个数字，可以存在0次或1次；
         
12. 反义
    大小写区分，表示非集
13. 后向引用
    可以用来匹配重复的单词的表达式：\b(\w+)\b\s+\1\b
    #转义【1】表示的是【（\w+）】，\s表示空白符，+表示1个及以上重复次数。
14. 零宽断言
    (lookahead)，某个表达式为：\b\w+(?=ing\b)
    #【？=xxx】assert匹配时，要求出现xxx的这个部分，xxx在后，搜索目标在前，比如【ing\b】是以ing结尾的单词B，若在句子中出现，则返回来输出B。
    (lookbehind)，某个表达式为：(?<=\bre)\w+\b
    #【？<=xxx】assert匹配时，要求出现xxx的这个部分，xxx在前，搜索目标在后，比如【\bre】是以re开始的单词B，若在句子中出现，则返回来输出B。
    同时使用，比如某个表达式为：(?<=\s)\d+(?=\s)
    #空白符后跟目标，有0及以上次的数字，空白符前跟目标。最后符合的结果可能是这个类型的文本：' xxx662xxx '
    
15. 负向零宽断言
    出现的原因，当我们要匹配q后不带u的字符，我们可能会这样表达：
    \b\w*q[^u]\w*\b #匹配包含后面不是字母u的字母q的单词
    负向零宽断言能解决这样 的问题，因为它只匹配一个位置，并不消费任何字符。
    现在，我们可以这样来解 决这个问题:\b\w*q(?!u)\w*\b。
    另一种情况是：(?<![a-z])\d{7}
    #assert7个数字前不出现[a-z]的情况
    详细分析表达式：(?<=<(\w+)>).*(?=<\/\1>)
    #文字【<xxx>】出现1次及以上，在它之前跟目标，这一串后匹配换行符以外的任何字符，可以存在0次及以上，
     然后，在【/\1】之前跟目标，其实是有两层含义
     （1）\转义了分组【/\1】，输出时表示了\后面的东西不变，【/\1】原模原样在；
     （2）【/\1】最里面一层，先表示文字【xxx】，也就是里面的【\1】反向引用了文字<xxx>重复了一次，在这基础上，还加了/。
        （2.1)举个例子，如果xxx = b，那么就会在（2）里先反向引用为【b】，然后加【/】，套上【<>】最后变为【</b>】，所以是<b>.</b>
   
16. 注释
17. 贪婪与懒惰
18. 处理选项
19. 平衡组/递归匹配
20. 还有些什么东西没提到
21. 联系作者
22. 网上的资源及本文参考文献 23. 更新纪录
